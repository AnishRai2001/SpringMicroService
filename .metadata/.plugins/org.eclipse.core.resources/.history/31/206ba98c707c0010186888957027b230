package com.example.demo.Service;

import java.util.Collections;
import java.util.Optional;

import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.example.demo.entity.Employee;
import com.example.demo.repository.EmployeeRepository;

@Service
public class CustomUserDetailsService implements UserDetailsService {

	@Override
	public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
		
		Optional<Employee>user=EmployeeRepository.findByEmail(email);{
			if(user.isPresent()) {
				return new User(email,user.get().getPassword(),Collections.singleton(new SimpleGrantedAuthority(user.get().getRole())));
			}
			else {
				throw new UsernameNotFoundException("User not found with email: " + email);
			}
		}
	}

}
